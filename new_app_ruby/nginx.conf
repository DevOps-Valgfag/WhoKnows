# reverse proxy / gate foran appen
# fordele: browseren har kun én indgang, internt dirigerer Nginx trafikken,
# det er nemt at tilføje HTTPS, auth mm senere (sikkerhed)

user  nginx;
worker_processes  auto;

events { worker_connections 1024; }

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;
  sendfile      on;
  tcp_nopush    on;
  tcp_nodelay   on;
  keepalive_timeout  65;

  # gzip kan slås til efter behov
  # gzip on;

  upstream whoknows_app {
    server app:8080;  # docker compose service name + port
  }

  server {
    listen 80;         # alt der rammer port 80 i Nginx bliver dirigeret til ruby app'en
    server_name _;

    # Health            simpel endpoint til at tjekke om Nginx kører
    location /nginx-health {
      return 200 'ok';
      add_header Content-Type text/plain;
    }

    location / {
      proxy_pass         http://whoknows_app;
      proxy_http_version 1.1;
      proxy_set_header   Host              $host;
      proxy_set_header   X-Real-IP         $remote_addr;
      proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header   X-Forwarded-Proto $scheme;
      proxy_set_header   X-Forwarded-Port  $server_port;
      proxy_read_timeout 60s;
    }
  }
}
